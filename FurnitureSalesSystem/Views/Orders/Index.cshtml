@model X.PagedList.IPagedList<FurnitureSalesSystem.Models.Order>
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@{
    ViewData["Title"] = "Danh sách đơn hàng";
}

<h1 class="text-2xl font-semibold text-gray-800 mb-6">Danh sách đơn hàng</h1>

<div class="bg-white rounded-lg shadow overflow-hidden mb-6">
    <div class="p-4 border-b flex justify-between items-center">
        <h3 class="font-semibold">Danh sách đơn hàng</h3>
        @if (User.IsInRole("Nhân viên bán hàng"))
        {
            <a asp-action="Create" class="bg-[var(--primary-color)] text-white px-4 py-2 rounded-lg hover:bg-[var(--secondary-color)] transition mb-4 inline-block">
                <i class="fas fa-plus mr-2"></i> Tạo đơn hàng
            </a>
        }
    </div>
    <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
                <tr>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Mã</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Khách hàng</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Ngày</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Số SP</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Tổng</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Trạng thái</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Hành động</th>
                </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
                @foreach (var order in Model)
                {
                    <tr class="hover:bg-gray-50">
                        <td class="px-6 py-4 whitespace-nowrap font-semibold text-[var(--primary)]">#@order.Id</td>
                        <td class="px-6 py-4">
                            <div>
                                <div class="text-sm font-medium text-gray-900">@order.Customer?.FullName</div>
                            </div>
                        </td>
                        <td class="px-6 py-4">@order.OrderDate.ToString("dd/MM/yyyy")</td>
                        <td class="px-6 py-4">
                            @(order.OrderDetails != null ? $"{order.OrderDetails.Sum(od => od.Quantity)} SP / {order.OrderDetails.Count} loại" : "")
                        </td>
                        <td class="px-6 py-4 font-semibold">@order.TotalAmount.ToString("N0") ₫</td>
                        <td class="px-6 py-4">
                            <span class="px-2 py-1 rounded-full text-xs font-semibold text-white @GetStatusClass(order.Status)">
                                @order.Status
                            </span>
                        </td>
                        <td class="px-6 py-4 flex gap-3">
                            <a asp-action="Details" asp-route-id="@order.Id" class="text-[var(--primary)] hover:text-[var(--secondary)]">
                                <i class="fas fa-eye"></i>
                            </a>

                            @if (User.IsInRole("Nhân viên bán hàng"))
                            {
                                <a asp-action="Edit" asp-route-id="@order.Id" class="text-blue-600 hover:text-blue-800">
                                    <i class="fas fa-edit"></i>
                                </a>

                                @* ❌ Bỏ nút xóa đơn hàng *@
                                @* ✅ Thêm nút hủy đơn popup *@
                                @if (order.Status != OrderStatus.Cancelled)
                                {
                                    <button onclick="openCancelPopup(@order.Id)" class="text-red-600 hover:text-red-800">
                                        <i class="fas fa-ban mr-1"></i>Hủy
                                    </button>
                                }
                                else
                                {
                                    <span class="text-gray-500 italic">Đã hủy</span>
                                }
                            }
                        </td>
                    </tr>
                }
            </tbody>
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="mb-4 p-3 bg-green-100 text-green-700 rounded-lg">
                    @TempData["SuccessMessage"]
                </div>
            }
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="mb-4 p-3 bg-red-100 text-red-700 rounded-lg">
                    @TempData["ErrorMessage"]
                </div>
            }
        </table>
    </div>

    <div class="px-6 py-4 border-t flex items-center justify-between">
        <div class="text-sm text-gray-500">
            Trang @Model.PageNumber / @Model.PageCount
        </div>
        <div class="flex space-x-2">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions
            {
                UlElementClasses = new[] { "flex", "space-x-1" },
                        LiElementClasses = new[] { "mx-1" },
                        PageClasses = new[] { "px-3", "py-1", "rounded", "border", "text-gray-600", "hover:bg-gray-100" },
                        ActiveLiElementClass = "bg-gray-300 font-semibold"
                        })
        </div>
    </div>
</div>

<!-- ✅ Popup Hủy đơn hàng -->
<div id="cancelModal" class="fixed inset-0 z-50 hidden bg-black bg-opacity-40 flex justify-center items-center">
    <div class="bg-white rounded-xl shadow-lg p-6 w-[400px]">
        <h2 class="text-xl font-semibold text-red-600 mb-3">Hủy đơn hàng</h2>
        <p id="cancelOrderId" class="text-gray-700 mb-4"></p>

        <form id="cancelForm" method="post" asp-action="CancelConfirmed">
            @Html.AntiForgeryToken()
            <input type="hidden" name="id" id="cancel-id" />

            <div class="space-y-2 text-sm">
                <label class="flex items-center">
                    <input type="radio" name="cancelReason" value="Khách hàng yêu cầu hủy trực tiếp với shop." class="mr-2" required>
                    Khách hàng yêu cầu hủy trực tiếp với shop.
                </label>
                <label class="flex items-center">
                    <input type="radio" name="cancelReason" value="Sự cố kỹ thuật hoặc nhầm lẫn trong xử lý đơn hàng." class="mr-2">
                    Sự cố kỹ thuật hoặc nhầm lẫn trong xử lý đơn hàng.
                </label>
                <label class="flex items-center">
                    <input type="radio" id="reason-other" name="cancelReason" value="Khác" class="mr-2">
                    Khác
                </label>
            </div>

            <div id="customReasonContainer" class="mt-3 hidden">
                <textarea name="customReason" rows="3"
                          class="w-full border rounded-lg p-2 text-sm focus:ring focus:ring-red-300"
                          placeholder="Nhập lý do khác (tùy chọn)..."></textarea>
            </div>

            <div class="flex justify-end gap-3 mt-5">
                <button type="button" onclick="closeCancelPopup()" class="bg-gray-300 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-400">
                    Đóng
                </button>
                <button type="submit" class="bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700">
                    Xác nhận hủy
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        // Mở popup hủy
        function openCancelPopup(id) {
            document.getElementById("cancel-id").value = id;
            document.getElementById("cancelOrderId").innerText = "Bạn có chắc muốn hủy đơn hàng #" + id + " ?";
            document.getElementById("cancelModal").classList.remove("hidden");
        }

        // Đóng popup hủy
        function closeCancelPopup() {
            document.getElementById("cancelModal").classList.add("hidden");
            document.querySelectorAll('input[name="cancelReason"]').forEach(el => el.checked = false);
            document.getElementById("customReasonContainer").classList.add("hidden");
        }

        // Hiện ô nhập lý do khác
        document.querySelectorAll('input[name="cancelReason"]').forEach(el => {
            el.addEventListener('change', e => {
                const otherBox = document.getElementById('customReasonContainer');
                if (e.target.value === 'Khác') {
                    otherBox.classList.remove('hidden');
                } else {
                    otherBox.classList.add('hidden');
                }
            });
        });
    </script>
}

@functions {
    string GetStatusClass(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "bg-yellow-500",
            OrderStatus.Confirmed => "bg-green-600",
            OrderStatus.Cancelled => "bg-red-500",
            _ => "bg-gray-500"
        };
    }
}
